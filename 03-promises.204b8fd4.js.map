{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEIC,EAAQ,SAAAC,G,OAAYC,SAASC,cAAcF,E,EACzCG,EAAWJ,EAAM,uBACjBK,EAAUL,EAAM,sBAChBM,EAAYN,EAAM,wBACXA,EAAM,SAEdO,iBAAiB,UAMtB,W,kBAUEC,YAAW,WACM,IAAIC,SAAQ,SAACC,EAASC,GAdhCC,KAAKC,SAAW,GAgBnBH,EAAQ,uBAAiCI,OAARC,EAAE,QAAmBD,OAAbE,EAAUD,GAAG,OAEpDJ,EAAK,sBAA8BG,OAARC,EAAE,QAAmBD,OAAbE,EAAUD,GAAG,M,IAInDE,MAAK,SAAAC,GACJC,EAAArB,GAASsB,OAAOC,QAAQH,E,IAEzBI,OAAM,SAAAC,GACLJ,EAAArB,GAASsB,OAAOI,QAAQD,E,MAEzBE,GACDA,GAASC,EACTV,EAAUW,KAAKF,E,EA1BjBG,MAAMC,iBAON,IANA,IAAMC,EAAaxB,EAAUY,MAEzBO,EAAQM,OAAO3B,EAASc,OACxBQ,EAAOK,OAAO1B,EAAQa,OACpBF,EAAY,CAAC,EAAES,GAEZO,EAAI,EAAGA,GAAKF,EAAYE,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet getEl = selector => document.querySelector(selector);\nconst inpDelay = getEl('input[name=\"delay\"]');\nconst inpStep = getEl('input[name=\"step\"]');\nconst inpAmount = getEl('input[name=\"amount\"]');\nconst form = getEl('.form');\n\nform.addEventListener('submit',promiseGenerator );\n\nfunction getRandom() {\n  return Math.random() > 0.3;\n};\n\nfunction promiseGenerator() {\n  event.preventDefault();\n  const maxAmmount = inpAmount.value;\n\n  let delay = Number(inpDelay.value);\n  let step = Number(inpStep.value);\n  const shownTime = [0,delay];\n\n  for (let i = 1; i <= maxAmmount; i += 1){    \n\n  setTimeout(() => {  \n   const promise = new Promise((resolve, reject) => {          \n    if (getRandom()) {\n      resolve(`✅ Fulfilled promise ${i} in ${shownTime[i]}ms`)\n    } else {\n      reject(`❌ Rejected promise ${i} in ${shownTime[i]}ms`)\n    }\n  });\n  promise\n    .then(value => {\n      Notiflix.Notify.success(value);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(error);\n    });    \n  }, delay);\n    delay += step;\n    shownTime.push(delay);\n  }  \n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$getEl","selector","document","querySelector","$ce04d3a99e08e73b$var$inpDelay","$ce04d3a99e08e73b$var$inpStep","$ce04d3a99e08e73b$var$inpAmount","addEventListener","setTimeout","Promise","resolve","reject","Math","random","concat","i","shownTime","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","delay","step","push","event","preventDefault","maxAmmount","Number","i1","_loop"],"version":3,"file":"03-promises.204b8fd4.js.map"}