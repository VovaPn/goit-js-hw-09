{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,IAAIC,EAAQC,GAAYC,SAASC,cAAcF,GAC/C,MAAMG,EAAWJ,EAAM,uBACjBK,EAAUL,EAAM,sBAChBM,EAAYN,EAAM,wBACXA,EAAM,SAEdO,iBAAiB,UAMtB,WACEC,MAAMC,iBACN,MAAMC,EAAaJ,EAAUK,MAE7B,IAAIC,EAAQC,OAAOT,EAASO,OACxBG,EAAOD,OAAOR,EAAQM,OAC1B,MAAMI,EAAY,CAAC,EAAEH,GAErB,IAAK,IAAII,EAAI,EAAGA,GAAKN,EAAYM,GAAK,EAEtCC,YAAW,KACM,IAAIC,SAAQ,CAACC,EAASC,KAdhCC,KAAKC,SAAW,GAgBnBH,EAAQ,uBAAqBH,QAAUD,EAAEC,QAEvCI,EAAK,sBAAoBJ,QAAQD,EAAEC,OAAe,IAIrDO,MAAKZ,IACJa,EAAA1B,GAAS2B,OAAOC,QAAQf,EAAM,IAE/BgB,OAAMC,IACLJ,EAAA1B,GAAS2B,OAAOI,QAAQD,EAAM,GAC9B,GACDhB,GACDA,GAASE,EACTC,EAAUe,KAAKlB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nlet getEl = selector => document.querySelector(selector);\nconst inpDelay = getEl('input[name=\"delay\"]');\nconst inpStep = getEl('input[name=\"step\"]');\nconst inpAmount = getEl('input[name=\"amount\"]');\nconst form = getEl('.form');\n\nform.addEventListener('submit',promiseGenerator );\n\nfunction getRandom() {\n  return Math.random() > 0.3;\n};\n\nfunction promiseGenerator() {\n  event.preventDefault();\n  const maxAmmount = inpAmount.value;\n\n  let delay = Number(inpDelay.value);\n  let step = Number(inpStep.value);\n  const shownTime = [0,delay];\n\n  for (let i = 1; i <= maxAmmount; i += 1){    \n\n  setTimeout(() => {  \n   const promise = new Promise((resolve, reject) => {          \n    if (getRandom()) {\n      resolve(`✅ Fulfilled promise ${i} in ${shownTime[i]}ms`)\n    } else {\n      reject(`❌ Rejected promise ${i} in ${shownTime[i]}ms`)\n    }\n  });\n  promise\n    .then(value => {\n      Notiflix.Notify.success(value);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(error);\n    });    \n  }, delay);\n    delay += step;\n    shownTime.push(delay);\n  }  \n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$getEl","selector","document","querySelector","$47d4ff9957288465$var$inpDelay","$47d4ff9957288465$var$inpStep","$47d4ff9957288465$var$inpAmount","addEventListener","event","preventDefault","maxAmmount","value","delay","Number","step","shownTime","i","setTimeout","Promise","resolve","reject","Math","random","then","$parcel$interopDefault","Notify","success","catch","error","failure","push"],"version":3,"file":"03-promises.095f4899.js.map"}